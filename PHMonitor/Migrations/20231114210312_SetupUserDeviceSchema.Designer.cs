// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PHMonitor.SQL;

#nullable disable

namespace PHMonitor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231114210312_SetupUserDeviceSchema")]
    partial class SetupUserDeviceSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PHMonitor.SQL.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeviceId"));

                    b.Property<double>("AverageCoreTemp")
                        .HasColumnType("double precision");

                    b.Property<double>("AverageCoreVoltage")
                        .HasColumnType("double precision");

                    b.Property<double>("BusSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("CpuPackage")
                        .HasColumnType("double precision");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GpuCoreLoad")
                        .HasColumnType("double precision");

                    b.Property<double>("GpuCoreTemp")
                        .HasColumnType("double precision");

                    b.Property<string>("Motherboard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalLoadPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("PHMonitor.SQL.QuestionnaireResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResponseId"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("FactoryDefaultParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUndervolting")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedParts")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ResponseId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("QuestionnaireResponses");
                });

            modelBuilder.Entity("PHMonitor.SQL.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PHMonitor.SQL.UserDeviceMapping", b =>
                {
                    b.Property<int>("MappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MappingId"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("MappingId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDeviceMappings");
                });

            modelBuilder.Entity("PHMonitor.SQL.Device", b =>
                {
                    b.HasOne("PHMonitor.SQL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PHMonitor.SQL.QuestionnaireResponse", b =>
                {
                    b.HasOne("PHMonitor.SQL.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHMonitor.SQL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PHMonitor.SQL.UserDeviceMapping", b =>
                {
                    b.HasOne("PHMonitor.SQL.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHMonitor.SQL.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
